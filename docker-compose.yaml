services:
  ble:
    build: .
    volumes:
# device, bluetooth
#      - /dev:/dev
#      - /sys/devices:/sys/devices
#      - /var/lib/bluetooth:/var/lib/bluetooth
#      - /run/dbus:/run/dbus
#      - /run/udev:/run/udev:ro
#      - /var/run/dbus:/var/run/dbus
#      - /etc/bluetooth/:/etc/bluetooth
#      - /lib/modules:/lib/modules:ro
# for systemctl
#      - /run/systemd/system:/run/systemd/system
#      - /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket
#      - /sys/fs/cgroup:/sys/fs/cgroup
# for systemctl --user
      - /run/user:/run/user
      - ../cabot-device-check:/opt/cabot-device-check
      - /usr/bin/docker:/usr/bin/docker
      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose
      - /var/run/docker.sock:/var/run/docker.sock
# for ssh in check_device_status.sh
#      - ~/.ssh:/home/developer/.ssh
# for log report
#      - /opt/report-submitter:/opt/report-submitter
#      - /opt/cabot/docker/home/.ros/log:/opt/cabot/docker/home/.ros/log
    environment:
      - CABOT_NAME
      - CABOT_BLE_ADAPTER
      - CABOT_START_AT_LAUNCH
      - CABOT_ACE_BATTERY_PORT
      - CABOT_ACE_BATTERY_BAUD
      - CABOT_REALSENSE_SERIAL_1
      - CABOT_REALSENSE_SERIAL_2
      - CABOT_REALSENSE_SERIAL_3
      - CABOT_CAMERA_NAME_1
      - CABOT_CAMERA_NAME_2
      - CABOT_CAMERA_NAME_3
      - CABOT_JETSON_USER
      - CABOT_JETSON_CONFIG
      - CABOT_ID_DIR=/home/developer/.ssh
      - CABOT_ID_FILE
      - CABOT_NO_BLE
      - CABOT_NO_TCP
      - CABOT_ROSBRIDGE_HOST=${CABOT_ROSBRIDGE_HOST:-rosbridge}
      - LIDAR_IF
      - LIDAR_IP
      - ARPSCAN_LIDAR
      - MICRO_CONTROLLER
      - LANG
      - RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
# required for display, device, and systemctl
    # privileged: true
# device, bluetooth
    #devices:
    #  - /dev/dri
# device, bluetooth
    # network_mode: host
    networks:
      - ros2_network
    ports:
      - 0.0.0.0:5000:5000
    command: ./cabot_app.py

networks:
  ros2_network:
    name: ros2_network
    external: true
